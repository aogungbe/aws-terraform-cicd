# Gives the workflow a name for GitHub Actions UI (you’ll see this under the “Actions” tab).
name: 'Terraform CI/CD'
on:
  push:
    branches: [ main ]
  pull_request:
# Runs automatically:
  # Whenever you push to the main branch.
  # Whenever a pull request is opened against main.
jobs:
  terraform:
    runs-on: ubuntu-latest
# Defines a job called terraform.
# Runs the job on the latest Ubuntu runner (a fresh virtual machine provided by GitHub).
  steps:
    name: Checkout code
    uses: actions/checkout@v4
# Pulls your repo’s code into the runner (so it can see your .tf files).
    name: Setup Terraform
    uses: hashicorp/setup-terraform@v3
# Installs Terraform in the runner so you can run terraform commands.
    name: Terraform Init
    run: Terraform Init
# Runs terraform init to download plugins/providers (like the AWS provider).
    name: Terraform Plan
    run: terraform plan
# Runs terraform plan to show what changes would be made (but doesn’t actually create/change anything in AWS).

  name: Terraform Apply
  run: terraform apply -auto-approve
  env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

 # It would actually run terraform apply and create/update your AWS resources automatically
 # It will use your secrets specified in Github for authentication.